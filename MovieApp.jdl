application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName MovieApp
    blueprints []
    buildTool maven
    cacheProvider no
    clientFramework react
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1688561176777
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache false
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.9.3"
    jwtSecretKey "Mjc5OWU2NDRmZDZlODkyOTgyMmU5Nzg1MjAwN2UyZTQzYWQ2OGQwZTQ3MmY5YTQ0N2I1MWU1NDQ1ZmQ2NmM1ODBiYmU4MzEwODlhMjAwYzJlMzU2MTUwZjUyMWIxNjY1ZGJhMjgyZGE4NjZiODNmZjJjMWMyZDM5MDljOTNlN2E="
    languages [fr, ar-ly, en]
    messageBroker false
    microfrontend false
    microfrontends []
    nativeLanguage fr
    otherModules []
    packageName com.camelstudio.myapp
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType no
    skipClient false
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities Category, Movie, Staff
}

entity Category {
  name String
  description String
}
entity Movie {
  name String
  duration Duration
  description TextBlob
  language Langue
  imageUrl String
  publishDate ZonedDateTime
}
entity Staff {
  role Role
  firstName String
  lastName String
}
enum Langue {
  Francais,
  Anglais,
  Arabe
}
enum Role {
  Director,
  Author,
  Actor
}

relationship ManyToMany {
  Movie{membreStaff} to Staff{movie}
  Movie{category} to Category{movie}
}

service Category, Movie, Staff with serviceClass
